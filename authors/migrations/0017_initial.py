# Generated by Django 5.2.5 on 2025-09-05 09:30

import authors.models.validators
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authors', '0016_remove_book_author_remove_authordetail_author_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('date_of_birth', models.DateField(validators=[authors.models.validators.validate_is_adult], verbose_name='Дата рождения')),
                ('profile', models.URLField(blank=True, null=True, verbose_name='Ссылка на профиль')),
                ('is_deleted', models.BooleanField(default=False, help_text='Если False - автор активен. Если True - автора больше нет в списке доступных', verbose_name='Удален ли автор')),
                ('rating', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Рейтинг автора')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Категория')),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название библиотеки')),
                ('location', models.CharField(max_length=100, verbose_name='Локация')),
                ('site', models.URLField(verbose_name='Сайт')),
            ],
        ),
        migrations.CreateModel(
            name='AuthorDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biography', models.TextField()),
                ('birth_city', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=50)),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='authors.author')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название книги')),
                ('publishing_date', models.DateField(validators=[authors.models.validators.validate_published_date], verbose_name='Дата публикации')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='Краткое описание')),
                ('page_count', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)], verbose_name='Количество страниц')),
                ('genre', models.CharField(blank=True, choices=[('Fiction', 'Fiction'), ('Non-Fiction', 'Non-Fiction'), ('Science Fiction', 'Science'), ('Fantasy', 'Fantasy'), ('Mystery', 'Mystery'), ('Biography', 'Biography')], max_length=100, null=True, verbose_name='Жанр')),
                ('author', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.PROTECT, to='authors.author', verbose_name='Автор')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='books', to='authors.category')),
                ('libraries', models.ManyToManyField(related_name='books', to='authors.library')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('books', models.ManyToManyField(related_name='events', to='authors.book')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='authors.library')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, verbose_name='Пол')),
                ('date_of_birth', models.DateField(validators=[authors.models.validators.validate_age])),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('staff', 'Staff'), ('reader', 'Reader')], default='staff', max_length=20, verbose_name='Роль')),
                ('is_active', models.BooleanField(default=True)),
                ('libraries', models.ManyToManyField(related_name='members', to='authors.library')),
            ],
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='authors.event')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_participations', to='authors.member')),
            ],
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrow_date', models.DateField(auto_now_add=True, verbose_name='Дата взятия книги')),
                ('return_date', models.DateField(verbose_name='Дата возврата')),
                ('is_returned', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrows', to='authors.book')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrows', to='authors.library')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrows', to='authors.member')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='authors.member'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique_for_date='created_at', verbose_name='Название')),
                ('body', models.TextField(verbose_name='Текст поста')),
                ('is_moderated', models.BooleanField(default=False, verbose_name='Промодерировано')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='authors.member')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='authors.library')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('description', models.TextField(verbose_name='Описание')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='authors.book')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='authors.member')),
            ],
        ),
    ]
